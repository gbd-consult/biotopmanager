# -*- coding: utf-8 -*-
"""
/***************************************************************************
 BiotopManager
                                 A QGIS plugin
 Dieses Plugin verwaltet Biotope
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2018-06-27
        git sha              : $Format:%H$
        copyright            : (C) 2018 by GBD GmbH
        email                : gebbert@gbd-consult.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from biotopmanager.common.singleton import Singleton
from biotopmanager.common.configuration import Configuration


class PostgresUser(metaclass=Singleton):
    """The postgresql user that should be used for the database connection

    >>> pu = PostgresUser()
    >>> pu.user_id = "soeren"
    >>> pu.user_id
    'soeren'
    >>> pu.password = "geheim"
    >>> pu.password
    'geheim'

    >>> pu.edit_table_name()
    'biotope.biotope_edit_soeren'

    """

    def __init__(self):

        self._conf = Configuration()
        self.__user_id = None
        self.__password = None

    @property
    def user_id(self):
        return self.__user_id

    @user_id.setter
    def user_id(self, user_id):
        self.__user_id = user_id

    @property
    def password(self):
        return self.__password

    @password.setter
    def password(self, password):
        self.__password = password

    @property
    def edit_table_name(self) -> str:
        """Return the name of the edit table for this user

        Returns:
            str
            The name of the user edit table
        """

        schema = self._conf.biotope_schema
        table = self._conf.biotope_table_name
        edit_table = "%(schema)s.%(table)s_edit_%(user_id)s"%{"schema": schema, "table": table, "user_id": self.__user_id}
        return edit_table


if __name__ == "__main__":
    import doctest

    doctest.testmod()
